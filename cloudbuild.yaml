substitutions:
  _PROJECT: 'hello'
  _ENVIRONMENT: 'dev'
  _VERSION: '1.0'
  _REGION: 'europe-west1'

steps:
# Create the postgres db instance
#- name: 'gcr.io/cloud-builders/gcloud'
#  args: ['sql', 'instances', 'create', '${_PROJECT}-${_ENVIRONMENT}', '--database-version=POSTGRES_11', '--region=${_REGION}']
# Stop the postgres db instance
#- name: 'gcr.io/cloud-builders/gcloud'
#  args: ['sql', 'instances', 'patch', 'odoo-test1', 'odoo-test1', 'never']
# Backup the postgres db instance
#- name: 'gcr.io/cloud-builders/gcloud'
#  args: ['sql', 'backups', 'create', '--instance=odoo-test1', '--description=pre-${_VERSION}', '--location=${_REGION}']
# Start the postgres db instance
#- name: 'gcr.io/cloud-builders/gcloud'
#  args: ['sql', 'instances', 'patch', 'odoo-test1', 'odoo-test1', 'always']
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/docker-build-test2:${_PROJECT}-${_ENVIRONMENT}-${_VERSION}', '.' ]
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/docker-build-test2:${_PROJECT}-${_ENVIRONMENT}-${_VERSION}']
# Deploy container image to Cloud Run
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'run'
  - 'deploy'
  - 'docker-build-test2'
  - '--image'
  - 'gcr.io/$PROJECT_ID/docker-build-test2:${_PROJECT}-${_ENVIRONMENT}-${_VERSION}'
  - '--region'
  - '${_REGION}'
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated'
  - '--cpu'
  - '1'
  - '--min-instances'
  - '1'
  - '--max-instances'
  - '1'
  - '--memory'
  - '512Mi'
images:
- 'gcr.io/$PROJECT_ID/docker-build-test2:${_PROJECT}-${_ENVIRONMENT}-${_VERSION}'
